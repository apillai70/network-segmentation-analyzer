#!/bin/bash
# Generated Network Segmentation Rules - IPTables Format
# Auto-generated by Network Segmentation Analyzer

# Flush existing rules
iptables -F
iptables -X
iptables -P INPUT DROP
iptables -P FORWARD DROP
iptables -P OUTPUT ACCEPT

# Allow established connections
iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
iptables -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow HTTP traffic to web tier - legitimate public access
iptables -A FORWARD -p tcp --dport 80 -m comment --comment 'RULE-1008' -j ACCEPT

# Allow HTTPS traffic to web tier - legitimate public access
iptables -A FORWARD -p tcp --dport 443 -m comment --comment 'RULE-1009' -j ACCEPT

# Allow web tier to communicate with application tier
iptables -A FORWARD -p tcp --dport 8080,--dport 8443 -m comment --comment 'RULE-1010' -j ACCEPT

# Allow app tier to access Redis cache
iptables -A FORWARD -p tcp --dport 6379 -m comment --comment 'RULE-1014' -j ACCEPT

# Allow app tier to access message queues (Kafka, RabbitMQ)
iptables -A FORWARD -p tcp --dport 9092,--dport 5672 -m comment --comment 'RULE-1015' -j ACCEPT

# Allow management tier to collect metrics from all tiers
iptables -A FORWARD -p tcp --dport 9090,--dport 9100,--dport 4040 -m comment --comment 'RULE-1016' -j ACCEPT

# Allow app tier to access MySQL databases
iptables -A FORWARD -p tcp --dport 3306 -m comment --comment 'RULE-1011' -j ACCEPT

# Allow app tier to access PostgreSQL databases
iptables -A FORWARD -p tcp --dport 5432 -m comment --comment 'RULE-1012' -j ACCEPT

# Allow app tier to access MongoDB databases
iptables -A FORWARD -p tcp --dport 27017 -m comment --comment 'RULE-1013' -j ACCEPT

# Default deny
iptables -A FORWARD -j LOG --log-prefix 'SEGMENTATION_DENY: '
iptables -A FORWARD -j DROP

echo 'Segmentation rules applied successfully'